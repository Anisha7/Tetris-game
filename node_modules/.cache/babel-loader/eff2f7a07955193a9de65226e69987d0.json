{"ast":null,"code":"import _classCallCheck from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/src/components/grid-board.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport GridSquare from './grid-square';\nimport { moveDown } from '../actions'; // Represents a 10 x 18 grid of grid squares\n\nvar GridBoard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GridBoard, _Component);\n\n  function GridBoard() {\n    _classCallCheck(this, GridBoard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GridBoard).apply(this, arguments));\n  }\n\n  _createClass(GridBoard, [{\n    key: \"makeGrid\",\n    // generates an array of 18 rows, each containing 10 GridSquares.\n    value: function makeGrid() {\n      var grid = [];\n\n      for (var row = 0; row < 18; row++) {\n        grid.push([]);\n\n        for (var col = 0; col < 10; col++) {\n          grid[row].push(React.createElement(GridSquare, {\n            key: \"\".concat(col).concat(row),\n            color: \"1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17\n            },\n            __self: this\n          }));\n        }\n      }\n\n      return grid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"grid-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.makeGrid());\n    }\n  }]);\n\n  return GridBoard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    grid: state.game.grid,\n    shape: state.game.shape,\n    rotation: state.game.rotation,\n    x: state.game.x,\n    y: state.game.y,\n    speed: state.game.speed,\n    isRunning: state.game.isRunning\n  };\n};\n\nexport default GridBoard;","map":{"version":3,"sources":["/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/src/components/grid-board.js"],"names":["React","Component","connect","GridSquare","moveDown","GridBoard","grid","row","push","col","makeGrid","mapStateToProps","state","game","shape","rotation","x","y","speed","isRunning"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CAEA;;IAEMC,S;;;;;;;;;;;;;AAEF;+BACW;AACP,UAAMC,IAAI,GAAG,EAAb;;AACA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAoC;AAChCD,QAAAA,IAAI,CAACE,IAAL,CAAU,EAAV;;AACA,aAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAoC;AAChCH,UAAAA,IAAI,CAACC,GAAD,CAAJ,CAAUC,IAAV,CAAe,oBAAC,UAAD;AAAY,YAAA,GAAG,YAAKC,GAAL,SAAWF,GAAX,CAAf;AAAiC,YAAA,KAAK,EAAC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf;AACH;AACJ;;AAED,aAAOD,IAAP;AACH;;;6BAES;AACN,aACI;AAAK,QAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKI,QAAL,EADL,CADJ;AAKH;;;;EArBmBT,S;;AAwBxB,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACLN,IAAAA,IAAI,EAAEM,KAAK,CAACC,IAAN,CAAWP,IADZ;AAELQ,IAAAA,KAAK,EAAEF,KAAK,CAACC,IAAN,CAAWC,KAFb;AAGLC,IAAAA,QAAQ,EAAEH,KAAK,CAACC,IAAN,CAAWE,QAHhB;AAILC,IAAAA,CAAC,EAAEJ,KAAK,CAACC,IAAN,CAAWG,CAJT;AAKLC,IAAAA,CAAC,EAAEL,KAAK,CAACC,IAAN,CAAWI,CALT;AAMLC,IAAAA,KAAK,EAAEN,KAAK,CAACC,IAAN,CAAWK,KANb;AAOLC,IAAAA,SAAS,EAAEP,KAAK,CAACC,IAAN,CAAWM;AAPjB,GAAP;AASH,CAVD;;AAYA,eAAed,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport GridSquare from './grid-square'\nimport { moveDown } from '../actions'\n\n// Represents a 10 x 18 grid of grid squares\n\nclass GridBoard extends Component {\n\n    // generates an array of 18 rows, each containing 10 GridSquares.\n    makeGrid() {\n        const grid = []\n        for (let row = 0; row < 18; row ++) {\n            grid.push([])\n            for (let col = 0; col < 10; col ++) {\n                grid[row].push(<GridSquare key={`${col}${row}`} color=\"1\" />)\n            }\n        }\n\n        return grid\n    }\n\n    render () {\n        return (\n            <div className = 'grid-board'>\n                {this.makeGrid()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      grid: state.game.grid,\n      shape: state.game.shape,\n      rotation: state.game.rotation,\n      x: state.game.x,\n      y: state.game.y,\n      speed: state.game.speed,\n      isRunning: state.game.isRunning\n    }\n}\n\nexport default GridBoard"]},"metadata":{},"sourceType":"module"}