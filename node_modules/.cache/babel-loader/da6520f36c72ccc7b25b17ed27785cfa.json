{"ast":null,"code":"import _classCallCheck from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/src/components/message-popup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // Displays a message\n\nvar MessagePopup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessagePopup, _Component);\n\n  function MessagePopup() {\n    _classCallCheck(this, MessagePopup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MessagePopup).apply(this, arguments));\n  }\n\n  _createClass(MessagePopup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          gameOver = _this$props.gameOver,\n          isRunning = _this$props.isRunning;\n      var message = '';\n      var isHidden = 'hidden'; // If the game is over, show the popup saying \"Game Over\"\n\n      if (gameOver) {\n        message = 'Game Over';\n        isHidden = ''; // If the game isn't running, it must be paused, so show the popup saying \"Paused\"\n      } else if (!isRunning) {\n        message = 'Paused';\n        isHidden = ''; // Default message, will still be hidden\n      } else {\n        message = '???';\n      }\n\n      return React.createElement(\"div\", {\n        className: \"message-popup \".concat(isHidden),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, message), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MessagePopup;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    gameOver: state.game.gameOver,\n    isRunning: state.game.isRunning\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps() {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps())(MessagePopup);","map":{"version":3,"sources":["/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/src/components/message-popup.js"],"names":["React","Component","connect","MessagePopup","props","gameOver","isRunning","message","isHidden","mapStateToProps","state","game","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;IACMC,Y;;;;;;;;;;;;;6BAEK;AAAA,wBACyB,KAAKC,KAD9B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,SADX,eACWA,SADX;AAEP,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,QAAQ,GAAG,QAAf,CAHO,CAKP;;AACA,UAAIH,QAAJ,EAAc;AACZE,QAAAA,OAAO,GAAG,WAAV;AACAC,QAAAA,QAAQ,GAAG,EAAX,CAFY,CAGd;AACC,OAJD,MAIO,IAAI,CAACF,SAAL,EAAgB;AACrBC,QAAAA,OAAO,GAAG,QAAV;AACAC,QAAAA,QAAQ,GAAG,EAAX,CAFqB,CAGvB;AACC,OAJM,MAIA;AACLD,QAAAA,OAAO,GAAG,KAAV;AACD;;AAED,aACE;AAAK,QAAA,SAAS,0BAAmBC,QAAnB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,OAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMH;;;;EA1B0BN,S;;AA6B3B,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLL,IAAAA,QAAQ,EAAEK,KAAK,CAACC,IAAN,CAAWN,QADhB;AAELC,IAAAA,SAAS,EAAEI,KAAK,CAACC,IAAN,CAAWL;AAFjB,GAAP;AAID,CALD;;AAOA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,SAAO,EAAP;AACD,CAFD;;AAIA,eAAeV,OAAO,CAACO,eAAD,EAAkBG,kBAAkB,EAApC,CAAP,CAA+CT,YAA/C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\n// Displays a message\nclass MessagePopup extends Component {\n\n  render() {\n    const { gameOver, isRunning } = this.props\n    let message = ''\n    let isHidden = 'hidden'\n\n    // If the game is over, show the popup saying \"Game Over\"\n    if (gameOver) {\n      message = 'Game Over'\n      isHidden = ''\n    // If the game isn't running, it must be paused, so show the popup saying \"Paused\"\n    } else if (!isRunning) {\n      message = 'Paused'\n      isHidden = ''\n    // Default message, will still be hidden\n    } else {\n      message = '???'\n    }\n\n    return (\n      <div className={`message-popup ${isHidden}`}>\n        <h1>{message}</h1>\n        <p></p>\n      </div>\n    )\n}\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    gameOver: state.game.gameOver,\n    isRunning: state.game.isRunning\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return { }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps())(MessagePopup)"]},"metadata":{},"sourceType":"module"}