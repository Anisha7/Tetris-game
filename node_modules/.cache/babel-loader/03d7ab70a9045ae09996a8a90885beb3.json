{"ast":null,"code":"import _classCallCheck from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/src/components/controls.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { moveDown, moveLeft, moveRight, rotate } from '../actions';\n\nvar Controls =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Controls, _Component);\n\n  function Controls() {\n    _classCallCheck(this, Controls);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Controls).apply(this, arguments));\n  }\n\n  _createClass(Controls, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var isRunning = this.props.isRunning;\n      return React.createElement(\"div\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"control-button\",\n        onClick: function onClick(e) {\n          if (!isRunning) {\n            return;\n          }\n\n          _this.props.moveLeft();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Left\"), React.createElement(\"button\", {\n        className: \"control-button\",\n        onClick: function onClick(e) {\n          if (!isRunning) {\n            return;\n          }\n\n          _this.props.moveRight();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Right\"), React.createElement(\"button\", {\n        className: \"control-button\",\n        onClick: function onClick(e) {\n          if (!isRunning) {\n            return;\n          }\n\n          _this.props.rotate();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Rotate\"), React.createElement(\"button\", {\n        className: \"control-button\",\n        onClick: function onClick(e) {\n          if (!isRunning) {\n            return;\n          }\n\n          _this.props.moveDown();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Down\"));\n    }\n  }]);\n\n  return Controls;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isRunning: state.game.isRunning\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps() {\n  return {\n    moveRight: moveRight,\n    moveLeft: moveLeft,\n    moveDown: moveDown,\n    rotate: rotate\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps())(Controls);","map":{"version":3,"sources":["/Users/anisha/OneDrive - Art Academy University/MakeSchool/few2-4/tetris/src/components/controls.js"],"names":["React","Component","connect","moveDown","moveLeft","moveRight","rotate","Controls","isRunning","props","e","mapStateToProps","state","game","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,MAAxC,QAAsD,YAAtD;;IAEMC,Q;;;;;;;;;;;;;6BAEK;AAAA;;AAAA,UAECC,SAFD,GAEe,KAAKC,KAFpB,CAECD,SAFD;AAIP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,iBAACE,CAAD,EAAO;AACjD,cAAI,CAACF,SAAL,EAAgB;AAAE;AAAQ;;AAC1B,UAAA,KAAI,CAACC,KAAL,CAAWL,QAAX;AACD,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAQE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,iBAACM,CAAD,EAAO;AACjD,cAAI,CAACF,SAAL,EAAgB;AAAE;AAAQ;;AAC1B,UAAA,KAAI,CAACC,KAAL,CAAWJ,SAAX;AACD,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,EAcE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,iBAACK,CAAD,EAAO;AACjD,cAAI,CAACF,SAAL,EAAgB;AAAE;AAAQ;;AAC1B,UAAA,KAAI,CAACC,KAAL,CAAWH,MAAX;AACD,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,EAoBE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,iBAACI,CAAD,EAAO;AAChD,cAAI,CAACF,SAAL,EAAgB;AAAE;AAAQ;;AAC1B,UAAA,KAAI,CAACC,KAAL,CAAWN,QAAX;AACF,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,CADF;AA4BD;;;;EAlCoBF,S;;AAqCvB,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACHJ,IAAAA,SAAS,EAAEI,KAAK,CAACC,IAAN,CAAWL;AADnB,GAAP;AAGD,CAJD;;AAMA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,SAAO;AACHT,IAAAA,SAAS,EAATA,SADG;AAEHD,IAAAA,QAAQ,EAARA,QAFG;AAGHD,IAAAA,QAAQ,EAARA,QAHG;AAIHG,IAAAA,MAAM,EAANA;AAJG,GAAP;AAMD,CAPD;;AAUA,eAAeJ,OAAO,CAACS,eAAD,EAAkBG,kBAAkB,EAApC,CAAP,CAA+CP,QAA/C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { moveDown, moveLeft, moveRight, rotate } from '../actions'\n\nclass Controls extends Component {\n\n  render() {\n\n    const { isRunning } = this.props\n\n    return (\n      <div className=\"controls\">\n        {/* left */}\n        <button className=\"control-button\" onClick={(e) => {\n          if (!isRunning) { return }\n          this.props.moveLeft()\n        }}>Left</button>\n\n        {/* right */}\n        <button className=\"control-button\" onClick={(e) => {\n          if (!isRunning) { return }\n          this.props.moveRight()\n        }}>Right</button>\n\n        {/* rotate */}\n        <button className=\"control-button\" onClick={(e) => {\n          if (!isRunning) { return }\n          this.props.rotate()\n        }}>Rotate</button>\n\n        {/* down */}\n        <button className=\"control-button\" onClick={(e) => {\n           if (!isRunning) { return }\n           this.props.moveDown()\n        }}>Down</button>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      isRunning: state.game.isRunning\n  }\n}\n\nconst mapDispatchToProps = () => {\n  return {\n      moveRight,\n      moveLeft,\n      moveDown,\n      rotate\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps())(Controls)"]},"metadata":{},"sourceType":"module"}